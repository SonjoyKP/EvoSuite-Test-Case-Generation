/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 19 02:37:03 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Selector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Selector_ESTest extends Selector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = Document.createShell("qaWFX}c\"75:. #");
      Elements elements0 = document0.getAllElements();
      Elements elements1 = Selector.filterOut(elements0, elements0);
      assertEquals(0, elements1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashSet<Element> hashSet0 = new HashSet<Element>();
      Document document0 = Document.createShell("5?5}XKg6'o");
      hashSet0.add(document0);
      Elements elements0 = Selector.filterOut(hashSet0, hashSet0);
      Elements elements1 = Selector.filterOut(hashSet0, elements0);
      assertFalse(elements1.equals((Object)elements0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ByN");
      Element element0 = new Element(tag0, "org.jsoup.select.Selector$SelectorParseException");
      element0.prependElement("ByN");
      Elements elements0 = element0.getElementsByAttributeValueNot("CU", "CU");
      Elements elements1 = Selector.select("ByN", (Iterable<Element>) elements0);
      assertTrue(elements1.equals((Object)elements0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Selector.selectFirst("8y|EyWHiPt=pj&~]", (Element) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '8y|EyWHiPt=pj&~]': unexpected token at '=pj&~]'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = Document.createShell("5?5}XKg6'o");
      // Undeclared exception!
      try { 
        Selector.select("E|33/S%e%4!>8", (Element) document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'E|33/S%e%4!>8': unexpected token at '3/S%e%4!>8'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }
}
