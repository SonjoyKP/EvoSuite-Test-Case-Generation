/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 19 02:34:19 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Document document0 = new Document("'!+8_.h~dhw");
      document0.prependText("org.jsoup.select.Evaluator$IsFirstChild");
      boolean boolean0 = evaluator_MatchText0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#declaration", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("CJlHt)Yl7w P");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "'':matchText", attributes0);
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      boolean boolean0 = evaluator_MatchText0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = Document.createShell("(R?},i&3o.");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = new Document("!?^");
      document0.appendElement("!?^");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Document document0 = new Document("#declaration");
      Document document1 = Document.createShell("#declaration");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("nth-last-of-type", parseSettings0);
      Element element0 = new Element(tag0, "nth-last-of-type");
      Document document0 = Document.createShell("nth-last-of-type");
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$CssNthEvaluator");
      Element element0 = document0.body();
      element0.appendChild(document0);
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = new Document("!Y^");
      Element element0 = document0.appendElement("!Y^");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("(R?},i&3o.");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsRoot0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Document.createShell("1;qxa");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = Document.createShell("N");
      Element element0 = document0.head();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = Document.createShell("':matchText");
      Element element0 = document0.body();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = new Document("!?^");
      Element element0 = document0.appendElement("!?^");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = Document.createShell("z\"4ce{:xLaX%\"X4-7");
      Element element0 = document0.head();
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-3813), 434);
      int int0 = evaluator_IsNthLastOfType0.calculatePosition(element0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(1337, 0);
      String string0 = evaluator_IsNthLastOfType0.toString();
      assertEquals(":nth-last-of-type(1337n)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, (-2038));
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(-2038)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(15, (-2084));
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastChild0.matches((Element) null, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(15, (-2022));
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastChild0.matches((Element) null, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = new Document("O+");
      Document document1 = document0.normalise();
      Element element0 = document1.body();
      boolean boolean0 = evaluator_IsFirstOfType0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, (-2038));
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = new Document("O+");
      document0.appendChild(document0);
      boolean boolean0 = evaluator_IsFirstOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-115), (-2022));
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell("% `ZP H");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = Document.createShell("u");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Element element0 = document0.body();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsLastChild0);
      boolean boolean0 = structuralEvaluator_ImmediateParent0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = Document.createShell("GI i-pVO");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-22583480));
      Tag tag0 = Tag.valueOf("'A51)]'");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "'A51)]'", attributes0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = Document.createShell("html");
      Document document1 = document0.clone();
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(1840);
      boolean boolean0 = evaluator_IndexLessThan0.matches(document0, document1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-3813));
      Document document0 = Document.createShell("z\"4ce{:xLaX%\"X4-7");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IndexLessThan0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Document document0 = Document.createShell("htDml");
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(1840);
      boolean boolean0 = evaluator_IndexLessThan0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("\"&lt;", "\"&lt;");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Document document0 = new Document("!?^");
      Element element0 = document0.attr("org.jsoup.select.Collector$Accumulator", "org.jsoup.select.Evaluator$ContainsOwnText");
      Elements elements0 = element0.getElementsByAttributeValueMatching("org.jsoup.select.Collector$Accumulator", "!?^");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = new Document("!?H");
      Element element0 = document0.attr("org.jsoup.select.Collector$Accumulator", "org.jsoup.select.Evaluator$ContainsOwnText");
      Elements elements0 = element0.getElementsByAttributeValueMatching("org.jsoup.select.Collector$Accumulator", "!?H");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = new Document("#declaration");
      Pattern pattern0 = Pattern.compile("#declaration", 250);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("HP$", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("o+", "o+");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("o+", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("o+", "o+");
      Element element0 = new Element(tag0, "o+", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("o+", "o+");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("o+", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("o+", true);
      Element element0 = new Element(tag0, "o+", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Document document0 = Document.createShell("':matchText");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("':matchText", "':matchText");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("':matchText", "':matchText");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("':matchText", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("':matchText", "':matchText");
      Attributes attributes1 = attributes0.put(attribute0);
      Element element0 = new Element(tag0, "':matchText", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("':matchText", "':matchText");
      Document document0 = Document.createShell("':matchText");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("#JNH}N*c)/3]0j0wu0", "org.jsoup.select.Collector$Accumulator");
      document0.attr("#JNH}N*c)/3]0j0wu0", ":prev*");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("#JNH}N*c)/3]0j0wu0", "org.jsoup.select.Evaluator$ContainsOwnText");
      document0.attr("#JNH}N*c)/3]0j0wu0", "org.jsoup.select.Evaluator$ContainsOwnText");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Document document0 = Document.createShell("htDml");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("htDml", "\"\"");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Document document0 = new Document("!");
      Elements elements0 = document0.getElementsByAttributeValueNot("org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'A51)]'");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("'A51)]'", "'A51)]'", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "'A51)]'", attributes0);
      attributes0.put(attribute0);
      Elements elements0 = pseudoTextElement0.getElementsByAttributeValue("'A51)]'", "'A51)]'");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'':matchText");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("'':matchText", "'':matchText", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "'':matchText", attributes0);
      attributes0.put(attribute0);
      Elements elements0 = pseudoTextElement0.getElementsByAttributeValue("'':matchText", "'':matchText");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("!EVtF0k$^", ":nth-last-child(-115n-2022)");
      boolean boolean0 = evaluator_AttributeWithValue0.matches((Element) null, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Tag tag0 = Tag.valueOf("<Ked$kq|");
      Attributes attributes0 = new Attributes();
      attributes0.put(":containsData(hx)lm:{ow4x)", "C$qyj#,Au");
      Element element0 = new Element(tag0, "C$qyj#,Au", attributes0);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("4H6|Xa{G|MK=");
      boolean boolean0 = evaluator_AttributeStarting0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Document document0 = new Document("!Y^");
      Element element0 = document0.attr("!Y^", "org.jsoup.select.Evaluator$ContainsOwnText");
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("!Y^");
      boolean boolean0 = evaluator_AttributeStarting0.matches((Element) null, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_AllElements0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev*", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.toString();
      assertEquals(":first-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining(" xA-m.;)QS_(9J", "3o{s0-8((}( 54 ");
      String string0 = evaluator_AttributeWithValueContaining0.toString();
      assertEquals("[xa-m.;)qs_(9j*=3o{s0-8((}( 54]", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag(":gt(-151)");
      String string0 = evaluator_Tag0.toString();
      assertEquals(":gt(-151)", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("nav");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn(nav)", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("<Ked$kq|");
      Tag tag0 = Tag.valueOf("<Ked$kq|");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "C$qyj#,Au", attributes0);
      boolean boolean0 = evaluator_ContainsOwnText0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting(":not:empty");
      String string0 = evaluator_AttributeStarting0.toString();
      assertEquals("[^:not:empty]", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      String string0 = evaluator_IsFirstChild0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("]:X x~na6sH");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[]:X x~na6sH]", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Document document0 = new Document("'!+8_.h~dhw");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("]:X x~na6sH");
      boolean boolean0 = evaluator_Attribute0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("nth-child");
      String string0 = evaluator_TagEndsWith0.toString();
      assertEquals("nth-child", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[4];
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("Y^BX5nl'D");
      evaluatorArray0[0] = (Evaluator) evaluator_TagEndsWith0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      Tag tag0 = Tag.valueOf("P");
      FormElement formElement0 = new FormElement(tag0, "P", (Attributes) null);
      boolean boolean0 = combiningEvaluator_And0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.toString();
      assertEquals(":last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("hX)LM:{OW4X", 1181);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn(hX)LM:{OW4X)", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Document document0 = new Document("O+");
      Pattern pattern0 = Pattern.compile("async");
      Elements elements0 = document0.getElementsMatchingOwnText(pattern0);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-115), (-2022));
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastChild0.matches((Element) null, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-115), (-2022));
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(-115n-2022)", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(0);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(0)", string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      Document document0 = Document.createShell("+@_k");
      boolean boolean0 = evaluator_Class0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      String string0 = evaluator_Class0.toString();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id((String) null);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_Id0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*#null", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Document document0 = new Document("9xlGkW4:NE3t6");
      Element element0 = document0.getElementById("sf81`Az5C`'qq)._");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Document document0 = Document.createShell("1;qxa");
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("_#rW;wbc");
      boolean boolean0 = evaluator_ContainsData0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("_#rW;wbc");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData(_#rw;wbc)", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = evaluator_IsRoot0.toString();
      assertEquals(":root", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.getPseudoClass();
      assertEquals("nth-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Document document0 = Document.createShell("qFEW/0j`&+15M2");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-467), 0);
      int int0 = evaluator_IsNthChild0.calculatePosition(document0, document0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(2490, 0);
      String string0 = evaluator_IsNthChild0.getPseudoClass();
      assertEquals("nth-child", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      String string0 = evaluator_IsOnlyChild0.toString();
      assertEquals(":only-child", string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("");
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_ContainsText0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("");
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_ContainsText0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not:contains()", string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("script", "script");
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_AttributeWithValueEnding0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev[script$=script]", string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      String string0 = evaluator_Matches0.toString();
      assertEquals(":matches(null)", string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Document document0 = new Document("!?^");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      // Undeclared exception!
      try { 
        evaluator_Matches0.matches(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("rt", 24576);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(":prev*null", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[:prev*null~=rt]", string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      String string0 = evaluator_IsEmpty0.toString();
      assertEquals(":empty", string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      evaluatorArray0[0] = (Evaluator) evaluator_MatchText0;
      evaluatorArray0[1] = (Evaluator) evaluator_MatchText0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(134);
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(134)", string0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("*", "S5tY6y2\"IFre");
      String string0 = evaluator_AttributeWithValueNot0.toString();
      assertEquals("[*!=s5ty6y2\"ifre]", string0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("#JNH}N*c)/3]0j0wu0", "org.jsoup.select.Evaluator$ContainsOwnText");
      String string0 = evaluator_AttributeWithValueStarting0.toString();
      assertEquals("[#jnh}n*c)/3]0j0wu0^=org.jsoup.select.evaluator$containsowntext]", string0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Document document0 = Document.createShell("htDml");
      Elements elements0 = document0.getElementsByAttributeValueStarting("htDml", ":last-child");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("KR51Yb>y{i^", "i");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[kr51yb>y{i^=i]", string0);
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(873);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(873)", string0);
  }
}
